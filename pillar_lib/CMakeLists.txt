set(PillarHeaders
        include/pillar/assert.hpp
        include/pillar/compiler.hpp
        include/pillar/date.hpp
        include/pillar/logger.hpp
        include/pillar/warnings.hpp
        include/pillar/xdgdirectories.hpp
)

set(PillarSources
        src/assert.cpp
        src/date.cpp
        src/logger.cpp
        src/xdgdirectories.cpp
)

set(TARGET_NAME tw_pillar)

set(TARGET_EXPORT_NAME pillar)
set(${TARGET_NAME}_MAJOR 1)
set(${TARGET_NAME}_MINOR 0)
set(${TARGET_NAME}_PATCH 0)

add_library(${TARGET_NAME} STATIC ${PillarHeaders} ${PillarSources})

set_target_properties(${TARGET_NAME}
        PROPERTIES
        LANGUAGE CXX
        LINKER_LANGUAGE CXX
        DEBUG_POSTFIX d
        VERSION ${${TARGET_NAME}_MAJOR}.${${TARGET_NAME}_MINOR}.${${TARGET_NAME}_PATCH}
        SOVERSION ${PROJECT_VERSION_MAJOR}
        OUTPUT_NAME ${TARGET_NAME}  # OUTPUT_NAME: Name of the target binaries (build and install). If the binary names are not project specific,
                                    # they may clash with binaries of other projects.
        EXPORT_NAME ${TARGET_EXPORT_NAME}   #This sets the name for the IMPORTED target generated by the install(EXPORT)
                                            #and export() commands. If not set, the logical target name is used by default.
)

add_library(${PROJECT_NAME}::${TARGET_EXPORT_NAME} ALIAS ${TARGET_NAME})

target_include_directories(${TARGET_NAME}
        PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>
)

if (${PROJECT_NAME}_USE_WARNINGS)
    add_warnings_and_compile_options(${TARGET_NAME} "${${PROJECT_NAME}_WARNINGS_AS_ERRORS}")
endif ()

if (${PROJECT_NAME}_STATIC_ANALYSIS)
    enable_static_analysis(${TARGET_NAME} "${${PROJECT_NAME}_WARNINGS_AS_ERRORS}")
endif ()

target_compile_features(${TARGET_NAME} INTERFACE cxx_std_23)

target_link_libraries(${TARGET_NAME} 
        PUBLIC 
        spdlog::spdlog 
        date::date 
        date::date-tz
)

if (${PROJECT_NAME}_INSTALL)
    install(DIRECTORY "include/${TARGET_EXPORT_NAME}" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
            COMPONENT pillar_Development)

    install(TARGETS ${TARGET_NAME}
            EXPORT ${project_export_set_name}
            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
            COMPONENT pillar_Runtime
            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
            COMPONENT pillar_Runtime
            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
            COMPONENT pillar_Development
            INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
endif ()
