set(VCPKG_TARGET_ARCHITECTURE x64)
set(VCPKG_CRT_LINKAGE dynamic)
set(VCPKG_LIBRARY_LINKAGE static)

set(VCPKG_CXX_FLAGS_DEBUG "${VCPKG_CXX_FLAGS} -stdlib=libc++")
set(VCPKG_CXX_FLAGS_RELEASE "${VCPKG_CXX_FLAGS} -stdlib=libc++")
set(VCPKG_C_FLAGS_DEBUG "${VCPKG_C_FLAGS}")
set(VCPKG_C_FLAGS_RELEASE "${VCPKG_C_FLAGS}")

# Set the generator to Ninja explicitly
set(CMAKE_GENERATOR "Ninja" CACHE STRING "" FORCE)
message(STATUS "Using CMAKE_GENERATOR: ${CMAKE_GENERATOR}")

# Alternatively, set CMAKE_MAKE_PROGRAM explicitly
set(CMAKE_MAKE_PROGRAM "/usr/bin/ninja" CACHE FILEPATH "Ninja executable" FORCE)
message(STATUS "Using CMAKE_MAKE_PROGRAM: ${CMAKE_MAKE_PROGRAM}")

set(VCPKG_CMAKE_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/toolchain-linux-clang.cmake")

message(STATUS "Using VCPKG_CMAKE_TOOLCHAIN_FILE: ${VCPKG_CMAKE_TOOLCHAIN_FILE}")

set(VCPKG_CMAKE_SYSTEM_NAME Linux)

